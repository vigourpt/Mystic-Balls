import React from 'react';
import { Heart } from 'lucide-react';

interface Props {
  isDarkMode: boolean;
  onPrivacyClick: () => void;
  onTermsClick: () => void;
  currentPage: string | null; // Add currentPage prop
  setCurrentPage: React.Dispatch<React.SetStateAction<string | null>>; // Add setCurrentPage prop
}

const Footer: React.FC<Props> = ({ isDarkMode, onPrivacyClick, onTermsClick, currentPage, setCurrentPage }) => {
  return (
    <footer className={`mt-16 py-8 border-t ${
      isDarkMode ? 'border-indigo-800/50 text-indigo-200' : 'border-indigo-100 text-gray-600'
    }`}>
      <div className="container mx-auto px-4">
        <div className="text-xs mt-4 text-center">
          Disclaimer:
          Mystic Balls is an AI-powered divination tool that integrates traditional methods such as Tarot, Numerology, Astrology, Oracle Cards, Runes, I Ching, Aura Reading, Past Life analysis, Angel Numbers, Daily Horoscope, Dream Analysis, and Magic 8 Ball with modern artificial intelligence. The insights and guidance provided by Mystic Balls are intended for entertainment and personal reflection purposes only. They do not constitute professional advice, nor are they guaranteed to be accurate, complete, or up-to-date. Users are encouraged to exercise their own judgment and seek professional counsel when making any important personal, financial, or medical decisions. By using Mystic Balls, you acknowledge that the interpretations, predictions, and guidance generated by the tool are subjective in nature, and the company assumes no liability for any decisions made or actions taken based on the provided content.
        </div>
        <div className="flex flex-col items-center justify-between md:flex-row gap-4">
          <div className="flex items-center gap-2">
            <span>Made with</span>
            <Heart className="w-4 h-4 text-red-500" />
            <span>by Mystic Insights</span>
          </div>
          
          <nav className="flex items-center gap-6 text-sm">
            <button
              onClick={() => { onPrivacyClick(); setCurrentPage('privacy'); }} // Use setCurrentPage for Privacy Policy
              className={`hover:${isDarkMode ? 'text-white' : 'text-gray-900'} transition-colors ${currentPage === 'privacy' ? 'font-semibold underline' : ''}`} // Conditionally style Privacy Policy button
            >
              Privacy Policy
            </button>
            <button
              onClick={() => { onTermsClick(); setCurrentPage('terms'); }} // Use setCurrentPage for Terms of Service
              className={`hover:${isDarkMode ? 'text-white' : 'text-gray-900'} transition-colors ${currentPage === 'terms' ? 'font-semibold underline' : ''}`} // Conditionally style Terms of Service button
            >
              Terms of Service
            </button>
          </nav>
        </div>
      </div>
    </footer>
  );
};

export default Footer;
